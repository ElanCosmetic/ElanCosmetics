/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    products: Product;
    collection: Collection;
    orders: Order;
    discounts: Discount;
    termsPage: TermsPage;
    volume: Volume;
    brand: Brand;
    customerContactMessages: CustomerContactMessage;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    products: {
      relatedCollections: 'collection';
    };
  };
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    collection: CollectionSelect<false> | CollectionSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    discounts: DiscountsSelect<false> | DiscountsSelect<true>;
    termsPage: TermsPageSelect<false> | TermsPageSelect<true>;
    volume: VolumeSelect<false> | VolumeSelect<true>;
    brand: BrandSelect<false> | BrandSelect<true>;
    customerContactMessages: CustomerContactMessagesSelect<false> | CustomerContactMessagesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    footer: Footer;
    homepage: Homepage;
    header: Header;
    productPage: ProductPage;
    contact: Contact;
    delivery: Delivery;
  };
  globalsSelect: {
    footer: FooterSelect<false> | FooterSelect<true>;
    homepage: HomepageSelect<false> | HomepageSelect<true>;
    header: HeaderSelect<false> | HeaderSelect<true>;
    productPage: ProductPageSelect<false> | ProductPageSelect<true>;
    contact: ContactSelect<false> | ContactSelect<true>;
    delivery: DeliverySelect<false> | DeliverySelect<true>;
  };
  locale: 'ro' | 'ru';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  role: 'customer' | 'admin';
  firstName: string;
  lastName: string;
  phone?: string | null;
  address?: {
    street?: string | null;
    city?: string | null;
    zipCode?: string | null;
  };
  wishlist?: (string | Product)[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  title: string;
  status?: ('draft' | 'published') | null;
  productCode?: string | null;
  featuredImg: string | Media;
  media?: (string | Media)[] | null;
  brandRelation?: (string | null) | Brand;
  price: number;
  compare_price?: number | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  ingredients?: string | null;
  stock?: number | null;
  volumeRelation?: (string | null) | Volume;
  relatedCollections?: {
    docs?: (string | Collection)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brand".
 */
export interface Brand {
  id: string;
  slug: string;
  associated_collection?: (string | null) | Collection;
  assignProducts?: (string | Product)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "collection".
 */
export interface Collection {
  id: string;
  title: string;
  products?: (string | Product)[] | null;
  all_products?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "volume".
 */
export interface Volume {
  id: string;
  slug: string;
  assignProducts?: (string | Product)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: string;
  orderNumber: number;
  customer?: (string | null) | User;
  guestInfo?: {
    name?: string | null;
    email?: string | null;
    phone?: string | null;
  };
  items: {
    product: string | Product;
    quantity: number;
    totalPrice: number;
    id?: string | null;
  }[];
  shippingAddress: {
    fullName: string;
    street: string;
    city: string;
    phone: string;
  };
  subtotal: number;
  shippingCost: number;
  totalAmount: number;
  discount?: {
    code?: string | null;
    type?: ('fixed' | 'percent') | null;
    value?: number | null;
  };
  status: 'pending' | 'shipped' | 'delivered' | 'cancelled';
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "discounts".
 */
export interface Discount {
  id: string;
  name: string;
  code: string;
  discountType: 'percent' | 'fixed';
  amount?: number | null;
  minimumOrderAmount?: number | null;
  user?: (string | null) | User;
  startDate: string;
  endDate: string;
  active?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "termsPage".
 */
export interface TermsPage {
  id: string;
  title: string;
  urlTitle: string;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customerContactMessages".
 */
export interface CustomerContactMessage {
  id: string;
  customer: {
    name: string;
    secondName: string;
    email: string;
    phone: string;
  };
  message: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'products';
        value: string | Product;
      } | null)
    | ({
        relationTo: 'collection';
        value: string | Collection;
      } | null)
    | ({
        relationTo: 'orders';
        value: string | Order;
      } | null)
    | ({
        relationTo: 'discounts';
        value: string | Discount;
      } | null)
    | ({
        relationTo: 'termsPage';
        value: string | TermsPage;
      } | null)
    | ({
        relationTo: 'volume';
        value: string | Volume;
      } | null)
    | ({
        relationTo: 'brand';
        value: string | Brand;
      } | null)
    | ({
        relationTo: 'customerContactMessages';
        value: string | CustomerContactMessage;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  role?: T;
  firstName?: T;
  lastName?: T;
  phone?: T;
  address?:
    | T
    | {
        street?: T;
        city?: T;
        zipCode?: T;
      };
  wishlist?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  title?: T;
  status?: T;
  productCode?: T;
  featuredImg?: T;
  media?: T;
  brandRelation?: T;
  price?: T;
  compare_price?: T;
  description?: T;
  ingredients?: T;
  stock?: T;
  volumeRelation?: T;
  relatedCollections?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "collection_select".
 */
export interface CollectionSelect<T extends boolean = true> {
  title?: T;
  products?: T;
  all_products?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  orderNumber?: T;
  customer?: T;
  guestInfo?:
    | T
    | {
        name?: T;
        email?: T;
        phone?: T;
      };
  items?:
    | T
    | {
        product?: T;
        quantity?: T;
        totalPrice?: T;
        id?: T;
      };
  shippingAddress?:
    | T
    | {
        fullName?: T;
        street?: T;
        city?: T;
        phone?: T;
      };
  subtotal?: T;
  shippingCost?: T;
  totalAmount?: T;
  discount?:
    | T
    | {
        code?: T;
        type?: T;
        value?: T;
      };
  status?: T;
  createdAt?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "discounts_select".
 */
export interface DiscountsSelect<T extends boolean = true> {
  name?: T;
  code?: T;
  discountType?: T;
  amount?: T;
  minimumOrderAmount?: T;
  user?: T;
  startDate?: T;
  endDate?: T;
  active?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "termsPage_select".
 */
export interface TermsPageSelect<T extends boolean = true> {
  title?: T;
  urlTitle?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "volume_select".
 */
export interface VolumeSelect<T extends boolean = true> {
  slug?: T;
  assignProducts?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brand_select".
 */
export interface BrandSelect<T extends boolean = true> {
  slug?: T;
  associated_collection?: T;
  assignProducts?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customerContactMessages_select".
 */
export interface CustomerContactMessagesSelect<T extends boolean = true> {
  customer?:
    | T
    | {
        name?: T;
        secondName?: T;
        email?: T;
        phone?: T;
      };
  message?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  our_adress?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  social_links?:
    | {
        social_link: string;
        social_icon: 'instagram' | 'facebook' | 'tiktok';
        id?: string | null;
      }[]
    | null;
  special_links?:
    | {
        title: string;
        link: {
          title: string;
          linkType: 'internal' | 'external';
          internalLink?:
            | ({
                relationTo: 'collection';
                value: string | Collection;
              } | null)
            | ({
                relationTo: 'products';
                value: string | Product;
              } | null)
            | ({
                relationTo: 'termsPage';
                value: string | TermsPage;
              } | null);
          externalUrl?: string | null;
          id?: string | null;
        }[];
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage".
 */
export interface Homepage {
  id: string;
  Layout: (
    | {
        title: string;
        category: string | Collection;
        id?: string | null;
        blockName?: string | null;
        blockType: 'productList';
      }
    | {
        slides: {
          img: string | Media;
          linkType: 'none' | 'internal' | 'external';
          internalLink?:
            | ({
                relationTo: 'collection';
                value: string | Collection;
              } | null)
            | ({
                relationTo: 'products';
                value: string | Product;
              } | null);
          externalUrl?: string | null;
          id?: string | null;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'imgslider';
      }
    | {
        categories: {
          image: string | Media;
          linkType: 'internal' | 'external';
          internalLink?:
            | ({
                relationTo: 'collection';
                value: string | Collection;
              } | null)
            | ({
                relationTo: 'products';
                value: string | Product;
              } | null);
          externalUrl?: string | null;
          id?: string | null;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'general-big-categories';
      }
  )[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  upperHeader?: string | null;
  logo?: (string | null) | Media;
  menuItems: {
    label: string;
    linkType: 'internal' | 'external';
    internalLink?:
      | ({
          relationTo: 'collection';
          value: string | Collection;
        } | null)
      | ({
          relationTo: 'products';
          value: string | Product;
        } | null)
      | ({
          relationTo: 'termsPage';
          value: string | TermsPage;
        } | null);
    externalUrl?: string | null;
    subItems?:
      | {
          label: string;
          linkType: 'internal' | 'external';
          internalLink?:
            | ({
                relationTo: 'collection';
                value: string | Collection;
              } | null)
            | ({
                relationTo: 'products';
                value: string | Product;
              } | null)
            | ({
                relationTo: 'termsPage';
                value: string | TermsPage;
              } | null);
          externalUrl?: string | null;
          subSubItems?:
            | {
                label: string;
                linkType: 'internal' | 'external';
                internalLink?:
                  | ({
                      relationTo: 'collection';
                      value: string | Collection;
                    } | null)
                  | ({
                      relationTo: 'products';
                      value: string | Product;
                    } | null)
                  | ({
                      relationTo: 'termsPage';
                      value: string | TermsPage;
                    } | null);
                externalUrl?: string | null;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
    id?: string | null;
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productPage".
 */
export interface ProductPage {
  id: string;
  layout: {
    title: string;
    category: string | Collection;
    id?: string | null;
    blockName?: string | null;
    blockType: 'productList';
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact".
 */
export interface Contact {
  id: string;
  contacts: {
    title: string;
    type: 'link' | 'richtext';
    links?:
      | {
          type?: ('facebook' | 'instagram' | 'tiktok') | null;
          label: string;
          url: string;
          id?: string | null;
        }[]
      | null;
    richtext?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    id?: string | null;
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "delivery".
 */
export interface Delivery {
  id: string;
  tax?: number | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  our_adress?: T;
  social_links?:
    | T
    | {
        social_link?: T;
        social_icon?: T;
        id?: T;
      };
  special_links?:
    | T
    | {
        title?: T;
        link?:
          | T
          | {
              title?: T;
              linkType?: T;
              internalLink?: T;
              externalUrl?: T;
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage_select".
 */
export interface HomepageSelect<T extends boolean = true> {
  Layout?:
    | T
    | {
        productList?:
          | T
          | {
              title?: T;
              category?: T;
              id?: T;
              blockName?: T;
            };
        imgslider?:
          | T
          | {
              slides?:
                | T
                | {
                    img?: T;
                    linkType?: T;
                    internalLink?: T;
                    externalUrl?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        'general-big-categories'?:
          | T
          | {
              categories?:
                | T
                | {
                    image?: T;
                    linkType?: T;
                    internalLink?: T;
                    externalUrl?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  upperHeader?: T;
  logo?: T;
  menuItems?:
    | T
    | {
        label?: T;
        linkType?: T;
        internalLink?: T;
        externalUrl?: T;
        subItems?:
          | T
          | {
              label?: T;
              linkType?: T;
              internalLink?: T;
              externalUrl?: T;
              subSubItems?:
                | T
                | {
                    label?: T;
                    linkType?: T;
                    internalLink?: T;
                    externalUrl?: T;
                    id?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productPage_select".
 */
export interface ProductPageSelect<T extends boolean = true> {
  layout?:
    | T
    | {
        productList?:
          | T
          | {
              title?: T;
              category?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact_select".
 */
export interface ContactSelect<T extends boolean = true> {
  contacts?:
    | T
    | {
        title?: T;
        type?: T;
        links?:
          | T
          | {
              type?: T;
              label?: T;
              url?: T;
              id?: T;
            };
        richtext?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "delivery_select".
 */
export interface DeliverySelect<T extends boolean = true> {
  tax?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}